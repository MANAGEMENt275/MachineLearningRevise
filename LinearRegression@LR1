{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOlelPllE0sYy8UT6h2QCYF"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":84,"metadata":{"id":"QoDAJBefiOQi","executionInfo":{"status":"ok","timestamp":1736760923784,"user_tz":360,"elapsed":4739,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"ced51afc-2618-41ee-fc83-1e70b7f21f86"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: fireducks in /usr/local/lib/python3.10/dist-packages (1.1.6)\n","Requirement already satisfied: firefw==1.1.6 in /usr/local/lib/python3.10/dist-packages (from fireducks) (1.1.6)\n","Requirement already satisfied: pandas<2.3.0,>=1.5.3 in /usr/local/lib/python3.10/dist-packages (from fireducks) (2.2.2)\n","Requirement already satisfied: pyarrow<18.2,>=18.1 in /usr/local/lib/python3.10/dist-packages (from fireducks) (18.1.0)\n","Requirement already satisfied: numpy>=1.22.4 in /usr/local/lib/python3.10/dist-packages (from pandas<2.3.0,>=1.5.3->fireducks) (1.26.4)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas<2.3.0,>=1.5.3->fireducks) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<2.3.0,>=1.5.3->fireducks) (2024.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas<2.3.0,>=1.5.3->fireducks) (2024.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas<2.3.0,>=1.5.3->fireducks) (1.17.0)\n"]}],"source":["import pandas as pd\n","import numpy as np\n","!pip install fireducks\n","import fireducks.pandas as pd\n"]},{"cell_type":"code","source":["def DervOfSlope(x,y,w):\n","  new_slope = 0\n","  new_con = 0\n","  x = np.array(x)\n","  y = np.array(y)\n","  for i in range(pd.shape(data)[0]):\n","    predict =-2 * x(y[i]-((w[0] * x)+w[1]))\n","    new_slope+=predict\n","  for i in range(pd.shape(data)[1]):\n","    new_con = -2 * (y[i]-((w[0] * x)+w[1]))\n","    new_con +=new_con\n","  return new_slope,new_con\n"],"metadata":{"id":"8vhQYb5Kiefr","executionInfo":{"status":"ok","timestamp":1736760923784,"user_tz":360,"elapsed":3,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":85,"outputs":[]},{"cell_type":"code","source":["def gradient(data,lr,steps):\n","  w = [0,0]\n","  for i in range(steps):\n","    w[0] = w[0]-lr*DervOfSlope(data)[0]\n","    w[1] = w[1]-lr*DervOfSlope(data)[1]\n","  return w\n"],"metadata":{"id":"g9O0TJJ6iek5","executionInfo":{"status":"ok","timestamp":1736760923784,"user_tz":360,"elapsed":3,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":86,"outputs":[]},{"cell_type":"code","source":["def Linear_Regression(data,lr,steps):\n","  w = gradient(data,lr,steps)\n","  return w"],"metadata":{"id":"TPUVwEs9ltAP","executionInfo":{"status":"ok","timestamp":1736760923784,"user_tz":360,"elapsed":3,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":87,"outputs":[]},{"cell_type":"code","source":["def predict(x,w):\n","  return w[0]*x+w[1]\n"],"metadata":{"id":"EPXm-vtsltCt","executionInfo":{"status":"ok","timestamp":1736760923784,"user_tz":360,"elapsed":3,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":88,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('/content/sample_data/california_housing_train.csv')\n","\n","# Linear_Regression(df,0.0001,1000)\n"],"metadata":{"id":"XWJ6mqm9ltFN","executionInfo":{"status":"ok","timestamp":1736760923784,"user_tz":360,"elapsed":2,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":89,"outputs":[]},{"cell_type":"code","source":["# prompt: split the data into x and y\n","\n","import pandas as pd\n","import numpy as np\n","\n","def DervOfSlope(x, y, w):\n","  new_slope = 0\n","  new_con = 0\n","  x = np.array(x)\n","  y = np.array(y)\n","  for i in range(len(x)):  # Use len(x) instead of pd.shape(data)[0]\n","    predict = -2 * x[i] * (y[i] - (w[0] * x[i] + w[1]))\n","    new_slope += predict\n","  for i in range(len(x)):  # Use len(x) instead of pd.shape(data)[1]\n","    new_con = -2 * (y[i] - (w[0] * x[i] + w[1]))\n","    new_con += new_con\n","  return new_slope, new_con\n","\n","def gradient(data, lr, steps):\n","  w = [0, 0]\n","  X = data.iloc[:, 0].values # Assuming the first column is your feature\n","  y = data.iloc[:, 1].values # Assuming the second column is your target\n","  for i in range(steps):\n","      slope, constant = DervOfSlope(X,y,w)\n","      w[0] = w[0] - lr * slope\n","      w[1] = w[1] - lr * constant\n","  return w\n","\n","def Linear_Regression(data, lr, steps):\n","  w = gradient(data, lr, steps)\n","  return w\n","\n","def predict(x,y, w):\n","   predicited =  (w[0] * x)+ w[1]\n","   actual  = y\n","   return predicited,actual\n","\n","df = pd.read_csv('/content/sample_data/california_housing_train.csv')\n","\n","# Example usage (replace 'housing_median_age' and 'median_house_value' with your desired columns)\n","X = df['housing_median_age']\n","y = df['median_house_value']\n","\n","# Combine X and y into a new DataFrame for gradient function\n","data_for_gradient = pd.DataFrame({'housing_median_age': X, 'median_house_value': y})\n","\n","# Now call Linear_Regression with the new DataFrame\n","w = Linear_Regression(data_for_gradient, 0.01, 100) # Reduced learning rate and iterations\n","# prediction = predict(X, w)\n","w"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rs6JpNR1n-dZ","executionInfo":{"status":"ok","timestamp":1736760929370,"user_tz":360,"elapsed":5588,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"7ee51b65-edb8-415a-8a58-fc685eb2033a"},"execution_count":90,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-90-ffee56504724>:13: RuntimeWarning: overflow encountered in scalar add\n","  new_slope += predict\n","<ipython-input-90-ffee56504724>:25: RuntimeWarning: invalid value encountered in scalar subtract\n","  w[0] = w[0] - lr * slope\n"]},{"output_type":"execute_result","data":{"text/plain":["[nan, nan]"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","def DervOfSlope(x, y, w):\n","    new_slope = 0\n","    new_con = 0\n","    for i in range(len(x)):\n","        error = y[i] - (w[0] * x[i] + w[1])\n","        new_slope += -2 * x[i] * error\n","        new_con += -2 * error\n","    return new_slope / len(x), new_con / len(x)\n","\n","def gradient(data, lr, steps):\n","    w = [0, 0]\n","    X = data.iloc[:, 0].values\n","    y = data.iloc[:, 1].values\n","    for _ in range(steps):\n","        slope, constant = DervOfSlope(X, y, w)\n","        w[0] -= lr * slope\n","        w[1] -= lr * constant\n","    return w\n","\n","def Linear_Regression(data, lr, steps):\n","    return gradient(data, lr, steps)\n","\n","def predict(x, y, w):\n","    predicted = (w[0] * x) + w[1]\n","    actual = y\n","    accuracy = np.sum(predicted== actual) / (np.shape(y)[0])\n","    return accuracy*100\n","\n","\n","# Load data\n","df = pd.read_csv('/content/sample_data/california_housing_train.csv')\n","\n","# Extract features and target\n","X = df['housing_median_age']\n","y = df['median_house_value']\n","\n","# Combine into a DataFrame for gradient function\n","data_for_gradient = pd.DataFrame({'housing_median_age': X, 'median_house_value': y})\n","\n","# Train linear regression\n","w = Linear_Regression(data_for_gradient, 0.01, 100)\n","\n","# Predictions\n","\n","\n","# Output weights\n","print(\"Weights:\", w)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pe6LC0hgien1","executionInfo":{"status":"ok","timestamp":1736760932990,"user_tz":360,"elapsed":3621,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"7ff55cde-4316-442b-8cd8-3646128fb013"},"execution_count":91,"outputs":[{"output_type":"stream","name":"stdout","text":["Weights: [-3.8649241722461535e+130, -1.1325798124603464e+129]\n"]}]},{"cell_type":"code","source":["df2 =pd.read_csv('/content/sample_data/california_housing_test.csv')\n","x1 = np.array(df2['housing_median_age'])\n","y1 = np.array(df2['median_house_value'])\n"],"metadata":{"id":"ML8l22x2rqiQ","executionInfo":{"status":"ok","timestamp":1736760933088,"user_tz":360,"elapsed":100,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":92,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Ib2whKJBrqwc","executionInfo":{"status":"ok","timestamp":1736760933088,"user_tz":360,"elapsed":2,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":92,"outputs":[]},{"cell_type":"code","source":["print(predict(x1,y1,w))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g-4zqvibierU","executionInfo":{"status":"ok","timestamp":1736760933088,"user_tz":360,"elapsed":2,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"3e99c65e-ea12-4a3f-ff63-6a8ae1b3cd8d"},"execution_count":93,"outputs":[{"output_type":"stream","name":"stdout","text":["0.0\n"]}]},{"cell_type":"code","source":["def accuracy(y_true, y_pred):\n","    accuracy = np.sum(y_true == y_pred) / len(y_true)\n","    return accuracy"],"metadata":{"id":"S6GxPK2YqXlF","executionInfo":{"status":"ok","timestamp":1736760933205,"user_tz":360,"elapsed":118,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":94,"outputs":[]},{"cell_type":"code","source":["#youtube implementation\n","class Linear_Regression:\n","  def __init__(self,lr=0.1,n_iters=100):\n","    self.lr = lr\n","    self.n_iters = n_iters\n","    self.weights = None\n","    self.bias = None\n","  def fit(self,X,y):\n","    n_samples,n_features = X.shape\n","    self.weights = np.zeros(n_features)\n","    self.bias = 0\n","    for _ in range(self.n_iters):\n","      y_predicted = np.dot(X,self.weights)+self.bias\n","      dw = (1/n_samples)*np.dot(X.T,(y_predicted-y))\n","      db = (1/n_samples)*np.sum(y_predicted-y)\n","\n","      self.weights = self.weights - self.lr*dw\n","      self.bias = self.bias - self.lr*db\n","  def predict(self,X):\n","    y_predicted = np.dot(X,self.weights)+self.bias\n","    return y_predicted\n"],"metadata":{"id":"N3gopKsHV_a5","executionInfo":{"status":"ok","timestamp":1736760933205,"user_tz":360,"elapsed":2,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":95,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn import datasets\n","from sklearn import svm\n"],"metadata":{"id":"E2IiNhjEV_dm","executionInfo":{"status":"ok","timestamp":1736760933206,"user_tz":360,"elapsed":2,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":96,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","X,y = datasets.make_regression(n_samples=10000,n_features=1,noise=20,random_state=4)\n","plt.scatter(X,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"_ooxKfwsV_gO","executionInfo":{"status":"ok","timestamp":1736760934484,"user_tz":360,"elapsed":1280,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"953655dd-ca7c-4e96-de72-c70dffb6b31b"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x79b46b1e6050>"]},"metadata":{},"execution_count":97},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["X_train ,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=1234)\n"],"metadata":{"id":"I-l-f176V_i1","executionInfo":{"status":"ok","timestamp":1736760934484,"user_tz":360,"elapsed":2,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":98,"outputs":[]},{"cell_type":"code","source":["reg = Linear_Regression()\n","reg.fit(X_train,y_train)\n","predicted = reg.predict(X_test)\n","def mse(y_test,predicted):\n","  return np.mean((y_test-predicted)**2)\n","mse_value = mse(y_test,predicted)\n","print(mse_value)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v27O1f-6V_lN","executionInfo":{"status":"ok","timestamp":1736760934484,"user_tz":360,"elapsed":2,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"1733b7b5-baa1-4784-8717-48ba731b984e"},"execution_count":99,"outputs":[{"output_type":"stream","name":"stdout","text":["371.2753503842577\n"]}]},{"cell_type":"code","source":["y_pred_line = reg.predict(X)\n","cmap = plt.get_cmap('viridis')\n","fig = plt.figure(figsize=(8,6))\n","m1 = plt.scatter(X_train, y_train, color=cmap(0.9), s=10)\n","m2 = plt.scatter(X_test, y_test, color=cmap(0.5), s=10)\n","plt.plot(X, y_pred_line, color='black', linewidth=2, label='Prediction')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":522},"id":"jutuTPMbnBs1","executionInfo":{"status":"ok","timestamp":1736760935476,"user_tz":360,"elapsed":994,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"8f380a86-4fa7-4fd8-8b17-732aca39eed8"},"execution_count":100,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"si09yl0xnBwV","executionInfo":{"status":"ok","timestamp":1736760935476,"user_tz":360,"elapsed":2,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":100,"outputs":[]},{"cell_type":"code","source":["# # write in sublime text\n","# #Linear\n","# import numpy as np\n","# import pandas as pd\n","\n","# class linearRegression:\n","# \tdef __init__(self,lr,iter):\n","# \t\tself.lr = lr\n","# \t\tself.iter = iter\n","# \tdef fit(self,X,y):\n","#     n_samples,n_features = X.shape\n","# \t\tself.weight = np.zeros(n_features)\n","# \t\tself.bias  = 0\n","# \t\tfor _ in iter:\n","# \t\t\ty_predict = np.dot(self.weights,X.T)+self.bias\n","# \t\t\tdw = (1/n_samples)*(np.dot(X,y_predict)-np.dot(X,y))\n","# \t\t\tdb = (1/n_samples)*(y_predict-y)\n","# \t\t\tself.weights = self.weights -self.lr*dw\n","# \t\t\tself.bias = self.bias-self.lr*db\n","#   def predict(self,X):\n","# \t\tself.y_predict = np.dot(X,self.weight)+self.bias\n","# \t\treturn self.y_predict\n","# \tdef mse(y_test,self.predict):\n","#     return np.mean((y_test-self.predict)**2)\n","\n"],"metadata":{"id":"py6lVqEPV_nl","executionInfo":{"status":"ok","timestamp":1736762374159,"user_tz":360,"elapsed":144,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":160,"outputs":[]},{"source":["# write in sublime text\n","#Linear\n","import numpy as np\n","import pandas as pd\n","\n","class linearRegression:\n","    def __init__(self,lr,iter):\n","        self.lr = lr\n","        self.iter = iter\n","    def fit(self,X,y):\n","\n","      n_samples,n_features = X.shape # This line was incorrectly indented\n","      self.weight = np.zeros(n_features)\n","      self.bias  = 0\n","\n","      for _ in range(self.iter): # Assuming you want to iterate 'iter' times\n","          y_predict = np.dot(X, self.weight) + self.bias # Use self.weight and X\n","          dw = (1/n_samples)*np.dot(X.T, (y_predict - y)) # Calculate dw\n","          db = (1/n_samples)*np.sum(y_predict - y) # Calculate db\n","          self.weight = np.subtract(self.weight ,np.dot(self.lr , dw)) # Update weight\n","          self.bias = np.subtract(self.bias ,np.dot(self.lr , db))# Update bias\n","          # print(self.weight)\n","    def predict(self,X):\n","        self.y_predict = np.dot(X,self.weight)+self.bias\n","        return self.y_predict\n","    def mse(self, y_test, y_pred): # Add self and y_pred\n","        return np.mean((y_test - y_pred)**2)"],"cell_type":"code","metadata":{"id":"rLoCs-KkjiaE","executionInfo":{"status":"ok","timestamp":1736762394712,"user_tz":360,"elapsed":196,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":176,"outputs":[]},{"source":["X,y = datasets.make_regression(n_samples=10000,n_features=1,noise=20,random_state=4)\n","X_train ,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=1234)\n","\n","reg = Linear_Regression(0.1,100)\n","reg.fit(X_train,y_train)\n","predicted = reg.predict(X_test)\n","def mse(y_test,predicted):\n","  return np.mean((y_test-predicted)**2)\n","mse_value = mse(y_test,predicted)\n","print(mse_value)"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q1LlQqbjhyTc","executionInfo":{"status":"ok","timestamp":1736762397267,"user_tz":360,"elapsed":108,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"8be82d44-b2c2-4595-c65d-fb1f20910eee"},"execution_count":177,"outputs":[{"output_type":"stream","name":"stdout","text":["371.2753503842577\n"]}]},{"cell_type":"code","source":["y_pred_line = reg.predict(X)\n","cmap = plt.get_cmap('viridis')\n","fig = plt.figure(figsize=(8,6))\n","m1 = plt.scatter(X_train, y_train, color=cmap(0.9), s=10)\n","m2 = plt.scatter(X_test, y_test, color=cmap(0.5), s=10)\n","plt.plot(X, y_pred_line, color='black', linewidth=2, label='Prediction')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":522},"id":"DgMSl1LJV_px","executionInfo":{"status":"ok","timestamp":1736762401781,"user_tz":360,"elapsed":453,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"f9e821e6-d681-4dc0-dd63-0babf5c4088b"},"execution_count":178,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["test_data = pd.read_csv('/content/sample_data/california_housing_test.csv')\n","test_data.head()\n","X = test_data.iloc[:,:-1].values\n","y = test_data.iloc[:,-1].values\n","X_train1,X_test1,y_train1,y_test1 = train_test_split(X,y,test_size=0.2,random_state=1234)\n","# X.shape\n","# test_data.shape\n","# y_test1"],"metadata":{"id":"Ml1JBMAGV_tK","executionInfo":{"status":"ok","timestamp":1736762568157,"user_tz":360,"elapsed":120,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":181,"outputs":[]},{"cell_type":"code","source":["y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SS-oNoLv9Hsn","executionInfo":{"status":"ok","timestamp":1736762374609,"user_tz":360,"elapsed":4,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"3c6244fb-cc0b-43f0-e0dc-96289fa75eb8"},"execution_count":165,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3000,)"]},"metadata":{},"execution_count":165}]},{"cell_type":"code","source":["test_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"wK7PB5CJ88cs","executionInfo":{"status":"ok","timestamp":1736762374609,"user_tz":360,"elapsed":3,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"673fe31e-a60c-40b2-c15f-ee1e5912f8dc"},"execution_count":166,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   longitude  latitude  housing_median_age  total_rooms  total_bedrooms  \\\n","0    -122.05     37.37                27.0       3885.0           661.0   \n","1    -118.30     34.26                43.0       1510.0           310.0   \n","2    -117.81     33.78                27.0       3589.0           507.0   \n","3    -118.36     33.82                28.0         67.0            15.0   \n","4    -119.67     36.33                19.0       1241.0           244.0   \n","\n","   population  households  median_income  median_house_value  \n","0      1537.0       606.0         6.6085            344700.0  \n","1       809.0       277.0         3.5990            176500.0  \n","2      1484.0       495.0         5.7934            270500.0  \n","3        49.0        11.0         6.1359            330000.0  \n","4       850.0       237.0         2.9375             81700.0  "],"text/html":["\n","  <div id=\"df-8af0c92b-02e0-4600-95c3-4f091efb5379\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>longitude</th>\n","      <th>latitude</th>\n","      <th>housing_median_age</th>\n","      <th>total_rooms</th>\n","      <th>total_bedrooms</th>\n","      <th>population</th>\n","      <th>households</th>\n","      <th>median_income</th>\n","      <th>median_house_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-122.05</td>\n","      <td>37.37</td>\n","      <td>27.0</td>\n","      <td>3885.0</td>\n","      <td>661.0</td>\n","      <td>1537.0</td>\n","      <td>606.0</td>\n","      <td>6.6085</td>\n","      <td>344700.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-118.30</td>\n","      <td>34.26</td>\n","      <td>43.0</td>\n","      <td>1510.0</td>\n","      <td>310.0</td>\n","      <td>809.0</td>\n","      <td>277.0</td>\n","      <td>3.5990</td>\n","      <td>176500.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-117.81</td>\n","      <td>33.78</td>\n","      <td>27.0</td>\n","      <td>3589.0</td>\n","      <td>507.0</td>\n","      <td>1484.0</td>\n","      <td>495.0</td>\n","      <td>5.7934</td>\n","      <td>270500.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-118.36</td>\n","      <td>33.82</td>\n","      <td>28.0</td>\n","      <td>67.0</td>\n","      <td>15.0</td>\n","      <td>49.0</td>\n","      <td>11.0</td>\n","      <td>6.1359</td>\n","      <td>330000.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-119.67</td>\n","      <td>36.33</td>\n","      <td>19.0</td>\n","      <td>1241.0</td>\n","      <td>244.0</td>\n","      <td>850.0</td>\n","      <td>237.0</td>\n","      <td>2.9375</td>\n","      <td>81700.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8af0c92b-02e0-4600-95c3-4f091efb5379')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8af0c92b-02e0-4600-95c3-4f091efb5379 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8af0c92b-02e0-4600-95c3-4f091efb5379');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fead8a20-9866-4d7b-b161-d4f7aee88ec0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fead8a20-9866-4d7b-b161-d4f7aee88ec0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fead8a20-9866-4d7b-b161-d4f7aee88ec0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test_data","summary":"{\n  \"name\": \"test_data\",\n  \"rows\": 3000,\n  \"fields\": [\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9949362939550161,\n        \"min\": -124.18,\n        \"max\": -114.49,\n        \"num_unique_values\": 607,\n        \"samples\": [\n          -121.15,\n          -121.46,\n          -121.02\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.1296695233438325,\n        \"min\": 32.56,\n        \"max\": 41.92,\n        \"num_unique_values\": 587,\n        \"samples\": [\n          40.17,\n          33.69,\n          39.61\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"housing_median_age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.555395554955755,\n        \"min\": 1.0,\n        \"max\": 52.0,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          14.0,\n          49.0,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_rooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2155.59333162558,\n        \"min\": 6.0,\n        \"max\": 30450.0,\n        \"num_unique_values\": 2215,\n        \"samples\": [\n          1961.0,\n          1807.0,\n          680.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_bedrooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 415.6543681363232,\n        \"min\": 2.0,\n        \"max\": 5419.0,\n        \"num_unique_values\": 1055,\n        \"samples\": [\n          532.0,\n          764.0,\n          2162.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1030.5430124122422,\n        \"min\": 5.0,\n        \"max\": 11935.0,\n        \"num_unique_values\": 1802,\n        \"samples\": [\n          947.0,\n          1140.0,\n          2019.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"households\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 365.42270980552604,\n        \"min\": 2.0,\n        \"max\": 4930.0,\n        \"num_unique_values\": 1026,\n        \"samples\": [\n          646.0,\n          629.0,\n          504.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"median_income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.854511729691481,\n        \"min\": 0.4999,\n        \"max\": 15.0001,\n        \"num_unique_values\": 2578,\n        \"samples\": [\n          1.725,\n          0.7403,\n          2.6964\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"median_house_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 113119.68746964433,\n        \"min\": 22500.0,\n        \"max\": 500001.0,\n        \"num_unique_values\": 1784,\n        \"samples\": [\n          71900.0,\n          63000.0,\n          115800.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":166}]},{"cell_type":"code","source":["linreg = linearRegression(0.001,100)\n","linreg.fit(X_train1,y_train1)\n","predicted = linreg.predict(X_test1)\n","# def mse(y_test1,predicted):\n","#   return np.mean((y_test1.reshape()-predicted)**2)\n","# mse_value = mse(y_test1,predicted)\n","print(mse_value)\n","# print(predicted.reshape(1,600))\n","# print(y_test1.shape)\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DUO9PFpo7hfj","executionInfo":{"status":"ok","timestamp":1736762630450,"user_tz":360,"elapsed":123,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"95087d63-c4bd-4db4-abfe-adde40e85572"},"execution_count":185,"outputs":[{"output_type":"stream","name":"stdout","text":["371.2753503842577\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-176-34f471c2aa7a>:20: RuntimeWarning: invalid value encountered in subtract\n","  self.weight = np.subtract(self.weight ,np.dot(self.lr , dw)) # Update weight\n","<ipython-input-176-34f471c2aa7a>:21: RuntimeWarning: invalid value encountered in subtract\n","  self.bias = np.subtract(self.bias ,np.dot(self.lr , db))# Update bias\n"]}]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","\n","class LinearRegression2:\n","    def __init__(self, lr=0.01, iterations=1000):\n","        \"\"\"\n","        Initialize the Linear Regression model.\n","\n","        Parameters:\n","        lr: Learning rate for gradient descent.\n","        iterations: Number of iterations for gradient descent.\n","        \"\"\"\n","        self.lr = lr\n","        self.iterations = iterations\n","        self.weights = None\n","        self.bias = None\n","\n","    def fit(self, X, y):\n","        \"\"\"\n","        Fit the Linear Regression model to the data.\n","\n","        Parameters:\n","        X: numpy array of shape (n_samples, n_features) - Feature matrix.\n","        y: numpy array of shape (n_samples,) - Target vector.\n","        \"\"\"\n","        # Get the number of samples and features\n","        n_samples, n_features = X.shape\n","\n","        # Initialize weights and bias\n","        self.weights = np.zeros(n_features)\n","        self.bias = 0\n","\n","        # Gradient descent\n","        for i in range(self.iterations):\n","            # Predicted values\n","            y_predicted = np.dot(X, self.weights) + self.bias\n","\n","            # Calculate gradients\n","            dw = (1 / n_samples) * np.dot(X.T, (y_predicted - y))  # Derivative of loss w.r.t. weights\n","            db = (1 / n_samples) * np.sum(y_predicted - y)  # Derivative of loss w.r.t. bias\n","\n","            # Update parameters\n","            self.weights -= self.lr * dw\n","            self.bias -= self.lr * db\n","\n","            # Print progress every 100 iterations (optional)\n","            if i % 100 == 0:\n","                mse = self.mse(y, y_predicted)\n","                print(f\"Iteration {i}: MSE = {mse}\")\n","\n","    def predict(self, X):\n","        \"\"\"\n","        Predict target values for given input features.\n","\n","        Parameters:\n","        X: numpy array of shape (n_samples, n_features) - Feature matrix.\n","\n","        Returns:\n","        Predicted values as a numpy array of shape (n_samples,).\n","        \"\"\"\n","        return np.dot(X, self.weights) + self.bias\n","\n","    def mse(self, y_true, y_pred):\n","        \"\"\"\n","        Calculate Mean Squared Error (MSE).\n","\n","        Parameters:\n","        y_true: numpy array of shape (n_samples,) - True target values.\n","        y_pred: numpy array of shape (n_samples,) - Predicted target values.\n","\n","        Returns:\n","        Mean Squared Error (MSE) as a float.\n","        \"\"\"\n","        return np.mean((y_true - y_pred) ** 2)\n","\n","# Example Usage\n","if __name__ == \"__main__\":\n","    # Create sample data (Multi-feature dataset)\n","    X = np.array([[1, 2], [2, 3], [3, 4], [4, 5]])\n","    y = np.array([5, 7, 9, 11])\n","\n","    # Create and train the model\n","    model = LinearRegression2(lr=0.01, iterations=1000)\n","    model.fit(X, y)\n","\n","    # Make predictions\n","    predictions = model.predict(X)\n","    print(\"Predictions:\", predictions)\n","\n","    # Evaluate the model\n","    mse_value = model.mse(y, predictions)\n","    print(\"Mean Squared Error:\", mse_value)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MMyJaU_v7hiS","executionInfo":{"status":"ok","timestamp":1736762660301,"user_tz":360,"elapsed":125,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"8acab9af-9a2d-48f6-8022-c6b2606d7298"},"execution_count":194,"outputs":[{"output_type":"stream","name":"stdout","text":["Iteration 0: MSE = 69.0\n","Iteration 100: MSE = 0.18484654287279906\n","Iteration 200: MSE = 0.13105778504612403\n","Iteration 300: MSE = 0.09292109419117338\n","Iteration 400: MSE = 0.0658818531279631\n","Iteration 500: MSE = 0.046710799193180046\n","Iteration 600: MSE = 0.03311835744856286\n","Iteration 700: MSE = 0.023481199616274578\n","Iteration 800: MSE = 0.016648372017714987\n","Iteration 900: MSE = 0.011803838618540091\n","Predictions: [ 4.85405315  6.93135412  9.00865508 11.08595604]\n","Mean Squared Error: 0.008369022868078908\n"]}]},{"cell_type":"code","source":["linreg = LinearRegression2(0.001,1000)\n","linreg.fit(X_train1,y_train1)\n","predicted = linreg.predict(X_test1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M-nvFxLv7hk3","executionInfo":{"status":"ok","timestamp":1736762660693,"user_tz":360,"elapsed":294,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"5c7aaca1-2ad0-4822-c653-eb2c6f73e6b6"},"execution_count":195,"outputs":[{"output_type":"stream","name":"stdout","text":["Iteration 0: MSE = 5.5959351928340535\n","Iteration 100: MSE = nan\n","Iteration 200: MSE = nan\n","Iteration 300: MSE = nan\n","Iteration 400: MSE = nan\n","Iteration 500: MSE = nan\n","Iteration 600: MSE = nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-194-d7485ea5e11b>:43: RuntimeWarning: invalid value encountered in subtract\n","  self.weights -= self.lr * dw\n"]},{"output_type":"stream","name":"stdout","text":["Iteration 700: MSE = nan\n","Iteration 800: MSE = nan\n","Iteration 900: MSE = nan\n"]}]},{"cell_type":"code","source":["# from sklearn.datasets import load_boston\n","# boston = load_boston()\n","# X = boston.data\n","# y = boston.target\n"],"metadata":{"id":"yuBrL5d37hnf","executionInfo":{"status":"ok","timestamp":1736762660694,"user_tz":360,"elapsed":2,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":196,"outputs":[]},{"source":["# from sklearn.datasets import fetch_openml\n","\n","# # Fetch the Ames housing dataset\n","# housing = fetch_openml(name=\"house_prices\", as_frame=True)\n","\n","# # Access the features and target (assuming 'SalePrice' is the target)\n","# X = housing.data\n","# y = housing.target\n","\n","# # Now you can use X and y for your linear regression model"],"cell_type":"code","metadata":{"id":"r3Di-pCsFHCW","executionInfo":{"status":"ok","timestamp":1736762660694,"user_tz":360,"elapsed":2,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":197,"outputs":[]},{"source":["from sklearn.datasets import fetch_california_housing\n","\n","# Fetch the California housing dataset\n","housing = fetch_california_housing()\n","\n","# Access the features and target\n","X = housing.data\n","y = housing.target\n","\n","# Now you can use X and y for your linear regression model"],"cell_type":"code","metadata":{"id":"5XHYBbnqFXc0","executionInfo":{"status":"ok","timestamp":1736762660784,"user_tz":360,"elapsed":91,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":198,"outputs":[]},{"cell_type":"code","source":["X_train1,X_test1,y_train1,y_test1 = train_test_split(X,y,test_size=0.2,random_state=1234)"],"metadata":{"id":"3XNkjK_pFjiP","executionInfo":{"status":"ok","timestamp":1736762660784,"user_tz":360,"elapsed":2,"user":{"displayName":"kamasani","userId":"14158007049107611834"}}},"execution_count":199,"outputs":[]},{"cell_type":"code","source":["linreg = LinearRegression2(0.001,1000)\n","linreg.fit(X_train1,y_train1)\n","predicted = linreg.predict(X_test1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bSWFbeqh7hq3","executionInfo":{"status":"ok","timestamp":1736762661189,"user_tz":360,"elapsed":407,"user":{"displayName":"kamasani","userId":"14158007049107611834"}},"outputId":"30846283-c7d4-4332-aded-38160569816f"},"execution_count":200,"outputs":[{"output_type":"stream","name":"stdout","text":["Iteration 0: MSE = 5.5959351928340535\n","Iteration 100: MSE = nan\n","Iteration 200: MSE = nan\n","Iteration 300: MSE = nan\n","Iteration 400: MSE = nan\n","Iteration 500: MSE = nan\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-194-d7485ea5e11b>:43: RuntimeWarning: invalid value encountered in subtract\n","  self.weights -= self.lr * dw\n"]},{"output_type":"stream","name":"stdout","text":["Iteration 600: MSE = nan\n","Iteration 700: MSE = nan\n","Iteration 800: MSE = nan\n","Iteration 900: MSE = nan\n"]}]}]}